{"version":3,"sources":["helpers/is-mobile.js","components/jumbo/jumbo.jsx","components/jumbo/index.js","components/topper/topper.jsx","components/topper/index.js","components/contentbox/index.js","components/contentbox/contentbox.jsx","components/fab-link/index.js","components/fab-link/fab-link.jsx","App.js","serviceWorker.js","index.js"],"names":["IS_MOBILE","_","window","screen","width","addEventListener","e","selector","target","document","querySelector","call","$","style","backgroundPosition","scrollY","Jumbo","title","subtitle","withIcon","className","top","cascade","icon","faChevronDown","size","handleClick","scrollTo","behavior","Topper","useState","isOver","setOver","show","setShow","height","onMouseOver","onMouseLeave","onClick","faChevronUp","faCircle","ContentBox","content","full","bottom","FabLink","href","x","y","gridRow","gridColumn","App","faGithub","faMedium","faTwitter","faLinkedin","faBolt","faAtom","faCode","faFingerprint","faWrench","faBookOpen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02549477.chunk.js","sourcesContent":["export const IS_MOBILE = _ => window.screen.width < 480","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { Fade, Bounce } from 'react-reveal'\r\nimport { IS_MOBILE } from '../../helpers/is-mobile'\r\n\r\nconst $ = (selector, target = document) => target.querySelector.call(target, selector)\r\n\r\nconst handleScroll = e => $('.jumbo-image').style.backgroundPosition = \r\n    `center ${ (IS_MOBILE() ? -200 : -70) + (window.scrollY+1)/(IS_MOBILE() ? 7 : 2)}px`\r\n\r\nwindow.addEventListener('scroll', handleScroll)\r\n\r\nexport const Jumbo = ({title, subtitle, withIcon}) => (\r\n    <>\r\n        <div className=\"jumbo-container\">\r\n            <div className=\"jumbo-image\">\r\n                <Fade top cascade>\r\n                    <h1>{title}</h1>\r\n                    <h2>{subtitle}</h2>\r\n                    <div className=\"jumbo-chev\">\r\n                        {withIcon \r\n                            ? (\r\n                                <Bounce>\r\n                                    <FontAwesomeIcon icon={faChevronDown} size='4x'></FontAwesomeIcon>\r\n                                </Bounce>\r\n                            ): <></>\r\n                        }\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    </>\r\n)","import { Jumbo } from './jumbo'\r\n\r\nexport default Jumbo","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronUp, faCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { IS_MOBILE } from '../../helpers/is-mobile'\r\n\r\nconst handleClick = _ => window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth'\r\n})\r\n\r\nexport const Topper = () => {\r\n    const [isOver, setOver] = useState(false)\r\n    const [show, setShow] = useState(false)\r\n    window.addEventListener('scroll', e => window.scrollY > .5*window.screen.height ? setShow(true) : setShow(false))\r\n\r\n    return (\r\n        <div \r\n            className={show ? 'topper' : 'topper-hidden'}            \r\n            onMouseOver={_ => setOver(true)}\r\n            onMouseLeave={_ => setOver(false)}\r\n            onClick={handleClick} >\r\n            { isOver || IS_MOBILE()\r\n                ? (<FontAwesomeIcon icon={faChevronUp} size='2x'></FontAwesomeIcon>)\r\n                : (<FontAwesomeIcon icon={faCircle} size='lg'></FontAwesomeIcon>)\r\n            }\r\n        </div>\r\n    )  \r\n}","import { Topper } from './topper'\r\n\r\nexport default Topper","import { ContentBox } from './contentbox'\r\n\r\nexport default ContentBox","import React, { useReducer, useEffect } from 'react'\r\nimport { Fade } from 'react-reveal'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const ContentBox = ({title, subtitle, icon, content, full}) => {\r\n\r\n    return (\r\n        <> \r\n            <Fade bottom>\r\n                <div className={full ? \"content-box-container-full\" : \"content-box-container\"}>\r\n                    <div className={full ? \"content-box-inner-full\" : \"content-box-inner\"}>\r\n                        <div className=\"content-box-header\">\r\n                            <h2 className=\"content-box-title\">{title} | </h2>\r\n                            <FontAwesomeIcon icon={icon} size={full ? '4x' : '2x'} />\r\n                        </div>                \r\n                        <h3 className=\"content-box-subtitle\">{subtitle}</h3>\r\n                        <p className=\"content-box-content\">{content}</p>\r\n                    </div>\r\n                </div>\r\n            </Fade>\r\n        </>\r\n    )\r\n}","import { FabLink } from './fab-link'\r\n\r\nexport default FabLink","import React from 'react' \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { IS_MOBILE } from '../../helpers/is-mobile'\r\n\r\n\r\nexport const FabLink = ({icon, href, x, y}) => (\r\n    <a  href={href}\r\n        className='fab-link'\r\n        style={{\r\n            gridRow: `${y}`,\r\n            gridColumn: `${x}`\r\n        }}>\r\n       <FontAwesomeIcon icon={icon} size={IS_MOBILE() ? '2x' : '4x'}/> \r\n    </a>\r\n)","import React from 'react';\nimport './App.css'\nimport Jumbo from './components/jumbo'\nimport Topper from './components/topper'\nimport ContentBox from './components/contentbox'\nimport { faCode, faAtom, faBolt, faFingerprint, faWrench, faArchive, faBookOpen } from '@fortawesome/free-solid-svg-icons'\nimport FabLink from './components/fab-link';\nimport { faGithub, faMedium, faLinkedin, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { Fade } from 'react-reveal';\nimport { IS_MOBILE } from './helpers/is-mobile'\n\nconst missionContent  = `It is my mission to bring great design and meaningful products together, beautifully.`\nconst goalContent     = `My goal is to use my talents to unite customers to businesses with elegant products.`\nconst passionContent  = `My passion is writing superior quality code that is clean and functional.`\nconst bioContent      = `An enthusiastic and ingenuitous problem solver, a lifelong learner. I'm always looking for a challenge, \n                         or to learn something new. I like doing things the right way, and I'm willing to keep an open mind\n                         in the face of criticism. I have a keen eye for design and possess strong attention to detail. I'm comfortable\n                         in either team-oriented environments or working individually. I love clean, well written code and elegant\n                         but minimal design schemes. I believe that I am a superior developer, and an excellent choice to include\n                         on your next project!`\n\nconst medium          = `https://medium.com/@arlenross02/`\nconst twitter         = `https://twitter.com/Rossketeer/`\nconst linkedin        = `https://linkedin.com/in/arlenner22/`\nconst github          = `https://github.com/arlenner`\n\nconst App = () => (\n    <>\n        <Jumbo \n            title='A. Ross'\n            subtitle=\"Let's Build Something Beautiful\"\n            withIcon/>\n\n        <Fade bottom>\n        <div className='fab-grid'>\n            \n            <FabLink href={github} icon={faGithub} x='2' y={IS_MOBILE() ? '4' : '3'} />\n            <FabLink href={medium} icon={faMedium} x='3' y='4' />\n            <FabLink href={twitter} icon={faTwitter} x='4' y='4' />\n            <FabLink href={linkedin} icon={faLinkedin} x='5' y={IS_MOBILE() ? '4' : '3'} />\n        </div>\n        </Fade>\n\n        <div className='flex-row'>\n            \n            <ContentBox\n                title=\"My Mission\"\n                subtitle=\"To Unite Business and Design\"\n                icon={faBolt}\n                content={missionContent} />\n\n            <ContentBox \n                title=\"My Goal\"\n                subtitle=\"Why Design Beautiful Content?\"\n                icon={faAtom}\n                content={goalContent} />\n\n            <ContentBox \n                title=\"My Passion\"\n                subtitle=\"Coding Perfection\"\n                icon={faCode}\n                content={passionContent} /> \n\n        </div>\n\n        <Topper/>\n\n        <ContentBox\n            title=\"About Me\"\n            subtitle=\"An Aspiring Web Developer\"\n            icon={faFingerprint}\n            content={bioContent}\n            full />\n\n        <ContentBox\n            title=\"Projects\"\n            subtitle=\"Some Things I've Worked On\"\n            icon={faWrench}\n            content=\"\"\n            full> \n        </ContentBox>\n\n        <ContentBox\n            title=\"Blog\"\n            subtitle=\"My Latest Articles\"\n            icon={faBookOpen}\n            content=\"\"\n            full> \n        </ContentBox>\n    </>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}